import{_ as a,o as e,c as s,R as t}from"./chunks/framework.tOkQcohr.js";const u=JSON.parse('{"title":"UI5 Page","description":"","frontmatter":{},"headers":[],"relativePath":"ui5/index.md","filePath":"ui5/index.md"}'),i={name:"ui5/index.md"},n=t(`<h1 id="ui5-page" tabindex="-1">UI5 Page <a class="header-anchor" href="#ui5-page" aria-label="Permalink to &quot;UI5 Page&quot;">​</a></h1><p>This Page explains how to implement an OData V4 CAP Service</p><h2 id="basics" tabindex="-1">Basics <a class="header-anchor" href="#basics" aria-label="Permalink to &quot;Basics&quot;">​</a></h2><p>OData V4 is bound directly to the frontend and any changes to an object are sent directly to the backend as a patch request.</p><p>With a few exceptions, we only have access to our backend through our view and not through the controller.</p><p>We create a binding just as we do for JSON models.</p><p>In the controller we can use any of the <a href="https://sapui5.hana.ondemand.com/sdk/#/topic/91f057786f4d1014b6dd926db0e91070" target="_blank" rel="noreferrer"><strong>List Binding (Aggregation Binding)</strong></a> functions.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">byId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Table&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bindList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/Objects&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Alternatively, we can create the binding directly in the frontend.</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark has-focused-lines vp-code"><code><span class="line has-focus"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Table</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Table&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{/Objects}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="spath" tabindex="-1">sPath <a class="header-anchor" href="#spath" aria-label="Permalink to &quot;sPath&quot;">​</a></h3><p>The sPath sometimes comes up when talking about databindings. localhost:4004/service/<strong>entity(key)</strong> The <strong>bold</strong> part is what we call the sPath. It allows to search for individual entities.</p><h1 id="crud" tabindex="-1">CRUD <a class="header-anchor" href="#crud" aria-label="Permalink to &quot;CRUD&quot;">​</a></h1><h2 id="create" tabindex="-1">Create <a class="header-anchor" href="#create" aria-label="Permalink to &quot;Create&quot;">​</a></h2><p>Creating a new entity is only possible on <a href="https://sapui5.hana.ondemand.com/sdk/#/topic/91f057786f4d1014b6dd926db0e91070" target="_blank" rel="noreferrer"><strong>List Binding (Aggregation Binding)</strong></a> using the <a href="https://sapui5.hana.ondemand.com/sdk/#/api/sap.ui.model.odata.v4.ODataListBinding%23methods/create" target="_blank" rel="noreferrer"><strong>create()</strong></a> function.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pNewObject </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> oListBinding.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><p>The <a href="https://sapui5.hana.ondemand.com/sdk/#/api/sap.ui.model.odata.v4.ODataListBinding%23methods/create" target="_blank" rel="noreferrer"><strong>create()</strong></a> function returns a promise of a context, with the <a href="https://sapui5.hana.ondemand.com/sdk/#/api/sap.ui.model.odata.v4.Context%23methods/created" target="_blank" rel="noreferrer"><strong>created()</strong></a> we can check if this promise has been resolved.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">oNewObject </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pNewObject.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">created</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">oDialog.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setBindingContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(oNewObject);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//or</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">oDialog.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bindElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(oNewObject.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre></div><p>The context allows us to bind the new object to something.</p><p>The create function also has optional parameters. We can find these in the UI5 documentation. The first and most important parameter allows us to set initial data for our created object.</p><p><a href="https://sapui5.hana.ondemand.com/#/api/sap.ui.model.odata.v4.ODataListBinding/methods/create" target="_blank" rel="noreferrer">Create documentation</a></p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">oNewObject </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pNewObject.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">created</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ value1: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;val1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span></code></pre></div><h2 id="read" tabindex="-1">Read <a class="header-anchor" href="#read" aria-label="Permalink to &quot;Read&quot;">​</a></h2><p>Reading is done using data bindings. Alternatively we can also use some functions to access objects from the controller.</p><p><a href="https://sapui5.hana.ondemand.com/#/api/sap.ui.model.odata.v4.Context%23methods/requestObject" target="_blank" rel="noreferrer"><strong>requestObject()</strong></a>: Returns a promise on the value for the given path relative to the context.</p><p><a href="https://sapui5.hana.ondemand.com/#/api/sap.ui.model.odata.v4.Context%23methods/requestProperty" target="_blank" rel="noreferrer"><strong>requestProperty()</strong></a>: Returns a promise on the property value(s) for the given path(s) relative to the context. The value(s) will be requested from the backend if necessary.</p><p><a href="https://sapui5.hana.ondemand.com/#/api/sap.ui.model.odata.v4.Context%23methods/getObject" target="_blank" rel="noreferrer"><strong>getObject()</strong></a>: Returns the value for the given path relative to this context</p><p><a href="https://sapui5.hana.ondemand.com/#/api/sap.ui.model.odata.v4.Context%23methods/getProperty" target="_blank" rel="noreferrer"><strong>getProperty()</strong></a>: Returns the property value for the given path relative to this context.</p><p>Have a look at <a href="https://sapui5.hana.ondemand.com/#/topic/17b30ac2d5474078be31e695e97450cc.html" target="_blank" rel="noreferrer">this page</a> for more information.</p><h2 id="update" tabindex="-1">Update <a class="header-anchor" href="#update" aria-label="Permalink to &quot;Update&quot;">​</a></h2><p>Updating happens automatically. The moment we change a value for something that is bound, an automatic patch request is sent to the backend.</p><p>More on this on the <a href="./drafts.html">Draft</a> and <a href="./batchcontrol.html">Batch Controll</a> pages.</p><p>The <a href="https://sapui5.hana.ondemand.com/sdk/#/api/sap.ui.model.odata.v4.Context%23methods/setProperty" target="_blank" rel="noreferrer"><strong>setProperty()</strong></a> function allows us to change values from the controller.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;property&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;value&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="delete" tabindex="-1">Delete <a class="header-anchor" href="#delete" aria-label="Permalink to &quot;Delete&quot;">​</a></h2><p>The <a href="https://sapui5.hana.ondemand.com/sdk/#/api/sap.ui.model.odata.v4.Context%23methods/delete" target="_blank" rel="noreferrer"><strong>delete()</strong></a> function can be called on a context and it deletes the object for that context.</p><p>It is also the only CRUD functionality that can be directly called on the model.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">model.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sPath);</span></span></code></pre></div>`,38),h=[n];function r(o,p,l,d,c,k){return e(),s("div",null,h)}const E=a(i,[["render",r]]);export{u as __pageData,E as default};
